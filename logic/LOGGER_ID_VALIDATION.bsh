/**************************** LOGGER ID VALIDATION ****************************/
/* The autogen defines its own `onClickLoginLogin` function. This is          */
/* overridden using @POSTPROC.                                                */
/******************************************************************************/

onClickLoginLogin () {
  // `userMenuPath` is created by the autogen
  String userVocabId  = getFieldValue(userMenuPath);
  isSelectedUser      = !isNull(userVocabId);

  if (isSelectedUser)   userSelected();
  else                noUserSelected();
}

noUserSelected() {
  msgHead  = "No User Selected";

  msgBody  = "Press 'OK' to log in as the user 'Other', or 'Cancel' to go ";
  msgBody += "back and select a Logger ID.";

  showAlert(msgHead, msgBody, "proceedAsOther()", "");
}

userSelected() {
  newTab("Control", true);
}

// Log in as 'Other' then call `userSelected()`.
proceedAsOther() {
  // Warning for case where 'Other' user isn't present on FAIMS server.
  msgHead  = "Cannot Log In";
  msgBody  = "The user 'Other' was not found. Please add 'Other' to this ";
  msgBody += "module's list of users via the FAIMS server in order to log in.";

  // Select 'Other' user.
  q  = "SELECT userid, fname, lname, email ";
  q += "FROM   user ";
  q += "WHERE  fname = 'Other'";

  FetchCallback callback = new FetchCallback() {
    onFetch(result) {
      // Can't select user named 'Other'.  Tell user to add it to FAIMS server.
      if (result.size() == 0) {
        showWarning(msgHead, msgBody);
        return;
      }

      // Can select user named 'Other'.  Set global variable `user` and call
      // `userSelected()`.
      user = new User(
          result.get(0),
          result.get(1),
          result.get(2),
          result.get(3)
      );
      setUser(user);
      username = result.get(1) + " " + result.get(2);

      userSelected();
    }
  };
  fetchOne(q, callback);
}
