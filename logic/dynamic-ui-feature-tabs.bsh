/************************* DYNAMIC UI - FEATURE TABS **************************/
/* There are two cases to handle:                                             */
/*   (a) When a Feature is newly created.                                     */
/*   (b) When a Feature has been loaded.                                      */
/*                                                                            */
/* Case (a) is handled by on-click events which trigger                       */
/* `updateFeatureTabs()`.                                                     */
/*                                                                            */
/* Case (b) is handled by a callback to `showTabGroup`. This is implemented   */
/* by overwriting the auto-generated function `loadFeatureFrom` using         */
/* @POSTPROC.                                                                 */
/******************************************************************************/
addOnEvent("Feature",                             "show",  "updateFeatureTabs()");
addOnEvent("Feature/Feature/Select_Feature_Type", "click", "updateFeatureTabs()");

// Fetch the "Select Feature Type" vocab and populate the
// `SELECT_FEATURE_TYPE_VOCAB` global.
fetchSelectFeatureType() {
  SELECT_FEATURE_TYPE_VOCAB = new HashMap();

  attributeName = "Select Feature Type";

  q  = " SELECT    vocabid, vocabname";
  q += " FROM      vocabulary";
  q += " LEFT JOIN attributekey";
  q += " USING    (attributeid)";
  q += " WHERE     attributename = '%s'";
  q  = replaceFirst(q, "%s", attributeName);

  populateHashMap = new FetchCallback() {
    onFetch(result) {
      for (row : result) {
        vocabId   = row.get(0);
        vocabName = row.get(1);
        SELECT_FEATURE_TYPE_VOCAB.put(vocabId, vocabName);
      }
    }
  };

  fetchAll(q, populateHashMap);
}

// The `fetchSelectFeatureType` call is required to set
// `SELECT_FEATURE_TYPE_VOCAB` because async code in Beanshell/Java is DUMBBBB.
// Also, SELECT_FEATURE_TYPE_VOCAB is a HashMap: vocabId -> vocabName.
SELECT_FEATURE_TYPE_VOCAB = null;
fetchSelectFeatureType();

vocabNametoTabRef(vocabName) {
  if (vocabName == null) return null;

  // "{Vocab_Name}" -> "Vocab_Name"
  tabName = vocabName.substring(1, vocabName.length() - 1);

  tabRef = "Feature/%s";
  tabRef = replaceFirst(tabRef, "%s", tabName);

  return tabRef;
}

cancelAllFeatureTabs() {
  for (String vocabName: SELECT_FEATURE_TYPE_VOCAB.values()) {
    tabRef = vocabNametoTabRef(vocabName);
    cancelTab(tabRef, false);
  }
}

updateFeatureTabs() {
  mainTabRef  = "Feature/Feature";
  dropdownRef = "Feature/Feature/Select_Feature_Type";

  // Based on the value of the dropdown at `dropdownRef`, figure out the
  // reference to the tab which should be shown.
  vocabId        = getFieldValue(dropdownRef);
  vocabName      = SELECT_FEATURE_TYPE_VOCAB.get(vocabId);
  selectedTabRef = vocabNametoTabRef(vocabName);

  // The following lines do as shown here: http://i.imgur.com/f0GT1Dy.png
  cancelAllFeatureTabs();
  if (selectedTabRef == null) return;
  showTab(selectedTabRef);
  showTab(mainTabRef);
}

loadFeatureFrom(String uuid) {
  String tabgroup = "Feature";
  setUuid(tabgroup, uuid);
  if (isNull(uuid)) return;

  FetchCallback cb = new FetchCallback() {
    onFetch(result) {
      updateFeatureTabs();
    }
  };
  showTabGroup(tabgroup, uuid, cb);
}
